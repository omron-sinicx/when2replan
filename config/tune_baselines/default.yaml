# parameters for tuning baselines
# Optuna setting
defaults:
  - override hydra/sweeper: optuna
  - override hydra/sweeper/sampler: tpe
hydra:
  sweeper:
    n_trials: 100
    direction: maximize
    storage: null
    study_name: tune_baselines
    n_jobs: 1
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 123
    params:
      navigation.baseline_params.time_triggered_replan_threshold: range(10, 100, step=1) # time_based_replan
      # navigation.baseline_params.stuck_replan_time_threshold: range(1, 20, step=1) # stuck_based_replan
      # navigation.baseline_params.distance_replan_threshold: range(0.1, 10, step=0.1) # distance_based_replan
      # navigation.baseline_params.patience_dist_threshold: range(1.0, 10, step=0.1) # time_based_replan_patience
      # navigation.baseline_params.patience_time_threshold: range(1, 20, step=1) # time_based_replan_patience

tune_baselines:
  log_root_dir: "log"
  log_save_dir: "eval"
  model_dir: "model"
  model_name: "best_model.zip"
  env_id: "NavigationStackEnv-v0"
  rl_model: "DQN" # DQN or PPO or A2C
  rl_config: "config/rl_params/default.yaml"
  navigation_scenarios:
    [
      "config/scenario/four_pillar/random_static.yaml",
      "config/scenario/four_pillar/random_dynamic.yaml",
    ]
  num_processes: 16 # number of processes for evaluation
  seed: 1000

  # random maps
  is_generate_random_map: False
  random_map_num: 100
  map_seed: 10
  map_config: "config/map_creator/eval_map.yaml"

  # evaluation parameters
  method: "time_based_replan"
  num_eval_episodes: 100 # number of trials for each navigation scenario

navigation:
  common:
    max_episode_steps: 500
    global_planner_calculation_interval: 10
    global_planner: "Dijkstra" # "Dijkstra" or "RRT" or "RRT-star"
    local_planner: "DWA" # "DWA" or "MPC"
    control_interval_time: 0.1 # [s]
    robot_radius: 1.0 # [m]
    inflation_radius: 0.1 # [m] inflation radius with robot radius for global and local planner

  baseline_params:
    time_triggered_replan_threshold: 10 # [-] must >= global_planner_calculation_interval [step]
    stuck_replan_time_threshold: 5 # [s] if robot is stuck over this time, replan
    distance_replan_threshold: 1.0 # [m] Replan every the robot move this distance
    patience_dist_threshold: 3.0 # [m] if the robot is close to the goal, replan based on stuck time
    patience_time_threshold: 5 # [s] if the robot is close to the goal, replan when stuck time is over this time

  handmade_detection:
    # Stuck
    stuck_check_interval: 1.0 # [s]
    stuck_radius: 0.5 # [m]
    # oscillation
    oscillation_check_interval: 1.0 # [s]
    oscillation_detect_time: 4.0 # [s] if robot continue to oscillate over time, it seems oscillate
    oscillation_goal_dist_threshold: 0.5 # [m] if the robot is close to the goal, not detect oscillation
    flipping_angle_threshold: 0.02 # [rad/s]
    flipping_count_num: 10 # number of flipping counter deque
    flipping_num_threshold: 3 # if the robot flips over this number, it seems oscillate

  dwa_config:
    # DWA parameters
    vel_x_limit:
      max: 2.0 # [m/s]
      min: 0.0 # [m/s]
    vel_y_limit:
      max: 0.1 # [m/s]
      min: -0.1 # [m/s]
    vel_theta_limit:
      max: 2.0 # [rad/s]
      min: -2.0 # [rad/s]
    vel_x_samples: 5
    vel_y_samples: 3
    vel_theta_samples: 8
    # weights
    path_distance_bias: 1.0
    path_angle_bias: 0.0
    sub_goal_distance_bias: 1.0
    sub_goal_angle_bias: 0.0001

  dijkstra_config:
    # Dijkstra parameters
    connectedness: 8 # 4, 8, 16, or 32
